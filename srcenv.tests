#!/bin/sh
#
# srcenv.tests - Test suite for srcenv
#
# shellcheck disable=SC2016

# region Framework
#
# Usage: start
#        run <command> <expected output> [<expected exit code>]
#        end

tests_sequence=0
tests_passed=0
tests_failed=0
tests_filter=

for filter in "$@"; do
    tests_filter="$tests_filter $filter "
done

NORMAL=$(tput sgr0 2> /dev/null || printf '\e[0m')
BOLD=$(tput bold 2> /dev/null || printf '\e[1m')
DIM=$(tput dim 2> /dev/null || printf '\e[2m')
RED=$(tput setaf 1 2> /dev/null || printf '\e[31m')
GREEN=$(tput setaf 2 2> /dev/null || printf '\e[32m')
YELLOW=$(tput setaf 3 2> /dev/null || printf '\e[33m')

start() {
    echo "${GREEN}✔${NORMAL} ${BOLD}srcenv tests:${NORMAL} Running..."
}

run() {
    id=$((tests_sequence + 1)); tests_sequence=$id

    if [ -n "$tests_filter" ]; then
        case "$tests_filter" in
            *\ $id\ *) ;;
            *) return ;;
        esac
    fi

    cmd="$1"; output=$(eval "$cmd" 2> /dev/null); exitcode=$?
    expected="$2"; expected_exitcode="${3:-0}"

    if [ "$output" != "$expected" ]; then
        tests_failed=$((tests_failed + 1))
        printf "${RED}✖${NORMAL} ${DIM}%3s.${NORMAL} %s: %s ${BOLD}${RED}!=${NORMAL} %s\n" \
               "$id" "$cmd" "$output" "$expected"
    elif [ "$exitcode" != "$expected_exitcode" ]; then
        tests_failed=$((tests_failed + 1))
        printf "${RED}✖${NORMAL} ${DIM}%3s.${NORMAL} %s: Exit code ${YELLOW}%s${NORMAL} ${BOLD}${RED}!=${NORMAL} Exit code ${YELLOW}%s${NORMAL}\n" \
               "$id" "$cmd" "$exitcode" "$expected_exitcode"
    else
        tests_passed=$((tests_passed + 1))
        printf "${GREEN}✔${NORMAL} ${DIM}%3s.${NORMAL} %s\n" "$id" "$cmd"
    fi
}

end() {
    if [ $tests_failed -gt 0 ]; then
        printf "${RED}✖${NORMAL} ${BOLD}srcenv tests:${NORMAL} %s tests passed, %s tests failed\n" "$tests_passed" "$tests_failed"
        exit 1
    fi

    printf "${GREEN}✔${NORMAL} ${BOLD}srcenv tests:${NORMAL} %s tests passed\n" "$tests_passed"
    exit 0
}

# endregion Framework

# region Setup

unset SRCENV_UNDO

export SRCENV_TEST_EXISTING=1
unset SRCENV_TEST_NOT_EXISTING

env_input=./test.env
posix_input=./test.env.sh

tee "$env_input" > /dev/null << 'EOF'
# Interpolation tests
SRCENV_TEST_A="${SRCENV_TEST_EXISTING:+6}"
SRCENV_TEST_B="${SRCENV_TEST_NOT_EXISTING:-7}"
SRCENV_TEST_C="$((SRCENV_TEST_A * SRCENV_TEST_B))"

# Escape sequence tests
SRCENV_TEST_ESCAPE="\$NOT_EXPANDED\t\r\n'\""

# Multi-line tests
SRCENV_TEST_MULTILINE="
$SRCENV_TEST_A
$SRCENV_TEST_B
$SRCENV_TEST_C"
EOF

tee "$posix_input" > /dev/null << 'EOF'
# Unexported variable tests
SRCENV_TEST_NOT_EXPORTED=1

# Interpolation tests
export SRCENV_TEST_A="${SRCENV_TEST_EXISTING:+6}"
export SRCENV_TEST_B="${SRCENV_TEST_NOT_EXISTING:-7}"
export SRCENV_TEST_C="$((SRCENV_TEST_A * SRCENV_TEST_B * SRCENV_TEST_NOT_EXPORTED))"

# Escape sequence tests
export SRCENV_TEST_ESCAPE="\$NOT_EXPANDED\t\r\n'\""

# Multi-line tests
export SRCENV_TEST_MULTILINE="
$SRCENV_TEST_A
$SRCENV_TEST_B
$SRCENV_TEST_C"
EOF

# shellcheck disable=SC2317
cleanup() {
    unset SRCENV_TEST_EXISTING

    rm -f "$env_input"
    rm -f "$posix_input"

    trap - EXIT
    exit
}

trap cleanup EXIT INT HUP TERM

# endregion Setup

# region Outputs

lf='
'

{ json_output=$(cat); } << 'EOF'
{
  "SRCENV_TEST_A": "6",
  "SRCENV_TEST_B": "7",
  "SRCENV_TEST_C": "42",
  "SRCENV_TEST_ESCAPE": "$NOT_EXPANDED\\t\\r\\n'\"",
  "SRCENV_TEST_MULTILINE": "\n6\n7\n42"
}
EOF

{ json_backup_output=$(cat); } << 'EOF'
{
  "SRCENV_TEST_A": "6",
  "SRCENV_TEST_B": "7",
  "SRCENV_TEST_C": "42",
  "SRCENV_TEST_ESCAPE": "$NOT_EXPANDED\\t\\r\\n'\"",
  "SRCENV_TEST_MULTILINE": "\n6\n7\n42",
  "SRCENV_UNDO": "{\"SRCENV_TEST_A\":null,\"SRCENV_TEST_B\":null,\"SRCENV_TEST_C\":null,\"SRCENV_TEST_ESCAPE\":null,\"SRCENV_TEST_MULTILINE\":null,\"SRCENV_UNDO\":null}"
}
EOF

{ env_output=$(cat); } << 'EOF'
SRCENV_TEST_A='6'
SRCENV_TEST_B='7'
SRCENV_TEST_C='42'
SRCENV_TEST_ESCAPE='$NOT_EXPANDED\t\r\n'\''"'
SRCENV_TEST_MULTILINE='
6
7
42'
EOF

{ env_backup_output=$(cat); } << 'EOF'
SRCENV_UNDO='{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

{ posix_output=$(cat); } << 'EOF'
export SRCENV_TEST_A='6'
export SRCENV_TEST_B='7'
export SRCENV_TEST_C='42'
export SRCENV_TEST_ESCAPE='$NOT_EXPANDED\t\r\n'\''"'
export SRCENV_TEST_MULTILINE='
6
7
42'
EOF

{ posix_backup_output=$(cat); } << 'EOF'
export SRCENV_UNDO='{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

{ cmd_output_prefix=$(cat); } << 'EOF'
set LFM=^


set LF=^^^%LFM%%LFM%^%LFM%%LFM%
EOF

{ cmd_output_suffix=$(cat); } << 'EOF'
set LFM=
set LF=
EOF

{ cmd_output=$(cat); } << 'EOF'
set "SRCENV_TEST_A=6"
set "SRCENV_TEST_B=7"
set "SRCENV_TEST_C=42"
set "SRCENV_TEST_ESCAPE=$NOT_EXPANDED\t\r\n'^""
set "SRCENV_TEST_MULTILINE=%LF%6%LF%7%LF%42"
EOF

{ cmd_backup_output=$(cat); } << 'EOF'
set "SRCENV_UNDO={^"SRCENV_TEST_A^":null,^"SRCENV_TEST_B^":null,^"SRCENV_TEST_C^":null,^"SRCENV_TEST_ESCAPE^":null,^"SRCENV_TEST_MULTILINE^":null,^"SRCENV_UNDO^":null}"
EOF

{ elvish_output=$(cat); } << 'EOF'
set-env $SRCENV_TEST_A '6'
set-env $SRCENV_TEST_B '7'
set-env $SRCENV_TEST_C '42'
set-env $SRCENV_TEST_ESCAPE '$NOT_EXPANDED\t\r\n'\''"'
set-env $SRCENV_TEST_MULTILINE '
6
7
42'
EOF

{ elvish_backup_output=$(cat); } << 'EOF'
set-env $SRCENV_UNDO '{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

{ fish_output=$(cat); } << 'EOF'
set -gx SRCENV_TEST_A '6'
set -gx SRCENV_TEST_B '7'
set -gx SRCENV_TEST_C '42'
set -gx SRCENV_TEST_ESCAPE '$NOT_EXPANDED\t\r\n'\''"'
set -gx SRCENV_TEST_MULTILINE '
6
7
42'
EOF

{ fish_backup_output=$(cat); } << 'EOF'
set -gx SRCENV_UNDO '{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

{ launchctl_output=$(cat); } << 'EOF'
launchctl setenv SRCENV_TEST_A '6'
launchctl setenv SRCENV_TEST_B '7'
launchctl setenv SRCENV_TEST_C '42'
launchctl setenv SRCENV_TEST_ESCAPE '$NOT_EXPANDED\t\r\n'\''"'
launchctl setenv SRCENV_TEST_MULTILINE '
6
7
42'
EOF

{ launchctl_backup_output=$(cat); } << 'EOF'
launchctl setenv SRCENV_UNDO '{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

{ nu_output=$(cat); } << 'EOF'
$env.SRCENV_TEST_A = '6'
$env.SRCENV_TEST_B = '7'
$env.SRCENV_TEST_C = '42'
$env.SRCENV_TEST_ESCAPE = '$NOT_EXPANDED\t\r\n'\''"'
$env.SRCENV_TEST_MULTILINE = '
6
7
42'
EOF

{ nu_backup_output=$(cat); } << 'EOF'
$env.SRCENV_UNDO = '{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

{ pwsh_output=$(cat); } << 'EOF'
$Env:SRCENV_TEST_A = '6'
$Env:SRCENV_TEST_B = '7'
$Env:SRCENV_TEST_C = '42'
$Env:SRCENV_TEST_ESCAPE = '$NOT_EXPANDED\t\r\n'\''"'
$Env:SRCENV_TEST_MULTILINE = '
6
7
42'
EOF

{ pwsh_backup_output=$(cat); } << 'EOF'
$Env:SRCENV_UNDO = '{"SRCENV_TEST_A":null,"SRCENV_TEST_B":null,"SRCENV_TEST_C":null,"SRCENV_TEST_ESCAPE":null,"SRCENV_TEST_MULTILINE":null,"SRCENV_UNDO":null}'
EOF

# endregion Outputs

# region Tests

start

run './srcenv --version' 'srcenv 1.3.0'

run './srcenv --invalid'              '' 1
run './srcenv not_a_file'             '' 1
run './srcenv --arg not_a_command'    '' 1

run './srcenv --arg "echo something"'                ''
run './srcenv --arg "echo something; not_a_command"' '' 1

run './srcenv '"$env_input"                           "$env_output"
run './srcenv --export --arg "$(cat '"$env_input"')"' "$env_output"
run './srcenv --export - < '"$env_input"''            "$env_output"
run './srcenv --local '"$env_input"''                 ''
run './srcenv --local --arg "$(cat '"$env_input"')"'  ''
run './srcenv - < '"$env_input"''                     ''

run './srcenv --ash '"$env_input"        "$posix_output"
run './srcenv --bash '"$env_input"       "$posix_output"
run './srcenv --csh '"$env_input"        "$posix_output"
run './srcenv --tcsh '"$env_input"       "$posix_output"
run './srcenv --dash '"$env_input"       "$posix_output"
run './srcenv --ksh '"$env_input"        "$posix_output"
run './srcenv --pdksh '"$env_input"      "$posix_output"
run './srcenv --murex '"$env_input"      "$posix_output"
run './srcenv --posix '"$env_input"      "$posix_output"
run './srcenv --sh '"$env_input"         "$posix_output"
run './srcenv --zsh '"$env_input"        "$posix_output"
run './srcenv --bat '"$env_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_output_suffix"
run './srcenv --cmd '"$env_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_output_suffix"
run './srcenv --elvish '"$env_input"     "$elvish_output"
run './srcenv --fish '"$env_input"       "$fish_output"
run './srcenv --launchctl '"$env_input"  "$launchctl_output"
run './srcenv --nu '"$env_input"         "$nu_output"
run './srcenv --nushell '"$env_input"    "$nu_output"
run './srcenv --pwsh '"$env_input"       "$pwsh_output"
run './srcenv --powershell '"$env_input" "$pwsh_output"
run './srcenv --env '"$env_input"        "$env_output"
run './srcenv --json '"$env_input"       "$json_output"

run './srcenv --ash --backup '"$env_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --bash --backup '"$env_input"       "$posix_output$lf$posix_backup_output"
run './srcenv --csh --backup '"$env_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --tcsh --backup '"$env_input"       "$posix_output$lf$posix_backup_output"
run './srcenv --dash --backup '"$env_input"       "$posix_output$lf$posix_backup_output"
run './srcenv --ksh --backup '"$env_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --pdksh --backup '"$env_input"      "$posix_output$lf$posix_backup_output"
run './srcenv --murex --backup '"$env_input"      "$posix_output$lf$posix_backup_output"
run './srcenv --posix --backup '"$env_input"      "$posix_output$lf$posix_backup_output"
run './srcenv --sh --backup '"$env_input"         "$posix_output$lf$posix_backup_output"
run './srcenv --zsh --backup '"$env_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --bat --backup '"$env_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_backup_output$lf$cmd_output_suffix"
run './srcenv --cmd --backup '"$env_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_backup_output$lf$cmd_output_suffix"
run './srcenv --elvish --backup '"$env_input"     "$elvish_output$lf$elvish_backup_output"
run './srcenv --fish --backup '"$env_input"       "$fish_output$lf$fish_backup_output"
run './srcenv --launchctl --backup '"$env_input"  "$launchctl_output$lf$launchctl_backup_output"
run './srcenv --nu --backup '"$env_input"         "$nu_output$lf$nu_backup_output"
run './srcenv --nushell --backup '"$env_input"    "$nu_output$lf$nu_backup_output"
run './srcenv --pwsh --backup '"$env_input"       "$pwsh_output$lf$pwsh_backup_output"
run './srcenv --powershell --backup '"$env_input" "$pwsh_output$lf$pwsh_backup_output"
run './srcenv --env --backup '"$env_input"        "$env_output$lf$env_backup_output"
run './srcenv --json --backup '"$env_input"       "$json_backup_output"

run './srcenv --ash --local '"$env_input"        ''
run './srcenv --bash --local '"$env_input"       ''
run './srcenv --csh --local '"$env_input"        ''
run './srcenv --tcsh --local '"$env_input"       ''
run './srcenv --dash --local '"$env_input"       ''
run './srcenv --ksh --local '"$env_input"        ''
run './srcenv --pdksh --local '"$env_input"      ''
run './srcenv --murex --local '"$env_input"      ''
run './srcenv --posix --local '"$env_input"      ''
run './srcenv --sh --local '"$env_input"         ''
run './srcenv --zsh --local '"$env_input"        ''
run './srcenv --bat --local '"$env_input"        "$cmd_output_prefix$lf$lf$cmd_output_suffix"
run './srcenv --cmd --local '"$env_input"        "$cmd_output_prefix$lf$lf$cmd_output_suffix"
run './srcenv --elvish --local '"$env_input"     ''
run './srcenv --fish --local '"$env_input"       ''
run './srcenv --launchctl --local '"$env_input"  ''
run './srcenv --nu --local '"$env_input"         ''
run './srcenv --nushell --local '"$env_input"    ''
run './srcenv --pwsh --local '"$env_input"       ''
run './srcenv --powershell --local '"$env_input" ''
run './srcenv --env --local '"$env_input"        ''
run './srcenv --json --local '"$env_input"       '{}'

run './srcenv --ash --local --backup '"$env_input"        ''
run './srcenv --bash --local --backup '"$env_input"       ''
run './srcenv --csh --local --backup '"$env_input"        ''
run './srcenv --tcsh --local --backup '"$env_input"       ''
run './srcenv --dash --local --backup '"$env_input"       ''
run './srcenv --ksh --local --backup '"$env_input"        ''
run './srcenv --pdksh --local --backup '"$env_input"      ''
run './srcenv --murex --local --backup '"$env_input"      ''
run './srcenv --posix --local --backup '"$env_input"      ''
run './srcenv --sh --local --backup '"$env_input"         ''
run './srcenv --zsh --local --backup '"$env_input"        ''
run './srcenv --bat --local --backup '"$env_input"        "$cmd_output_prefix$lf$lf$cmd_output_suffix"
run './srcenv --cmd --local --backup '"$env_input"        "$cmd_output_prefix$lf$lf$cmd_output_suffix"
run './srcenv --elvish --local --backup '"$env_input"     ''
run './srcenv --fish --local --backup '"$env_input"       ''
run './srcenv --launchctl --local --backup '"$env_input"  ''
run './srcenv --nu --local --backup '"$env_input"         ''
run './srcenv --nushell --local --backup '"$env_input"    ''
run './srcenv --pwsh --local --backup '"$env_input"       ''
run './srcenv --powershell --local --backup '"$env_input" ''
run './srcenv --env --local --backup '"$env_input"        ''
run './srcenv --json --local --backup '"$env_input"       '{}'

run './srcenv '"$posix_input"                  "$env_output"
run './srcenv --arg "$(cat '"$posix_input"')"' "$env_output"
run './srcenv - < '"$posix_input"              "$env_output"

run './srcenv --ash '"$posix_input"        "$posix_output"
run './srcenv --bash '"$posix_input"       "$posix_output"
run './srcenv --csh '"$posix_input"        "$posix_output"
run './srcenv --tcsh '"$posix_input"       "$posix_output"
run './srcenv --dash '"$posix_input"       "$posix_output"
run './srcenv --ksh '"$posix_input"        "$posix_output"
run './srcenv --pdksh '"$posix_input"      "$posix_output"
run './srcenv --murex '"$posix_input"      "$posix_output"
run './srcenv --posix '"$posix_input"      "$posix_output"
run './srcenv --sh '"$posix_input"         "$posix_output"
run './srcenv --zsh '"$posix_input"        "$posix_output"
run './srcenv --bat '"$posix_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_output_suffix"
run './srcenv --cmd '"$posix_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_output_suffix"
run './srcenv --elvish '"$posix_input"     "$elvish_output"
run './srcenv --fish '"$posix_input"       "$fish_output"
run './srcenv --launchctl '"$posix_input"  "$launchctl_output"
run './srcenv --nu '"$posix_input"         "$nu_output"
run './srcenv --nushell '"$posix_input"    "$nu_output"
run './srcenv --pwsh '"$posix_input"       "$pwsh_output"
run './srcenv --powershell '"$posix_input" "$pwsh_output"
run './srcenv --env '"$posix_input"        "$env_output"
run './srcenv --json '"$posix_input"       "$json_output"

run './srcenv --ash --backup '"$posix_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --bash --backup '"$posix_input"       "$posix_output$lf$posix_backup_output"
run './srcenv --csh --backup '"$posix_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --tcsh --backup '"$posix_input"       "$posix_output$lf$posix_backup_output"
run './srcenv --dash --backup '"$posix_input"       "$posix_output$lf$posix_backup_output"
run './srcenv --ksh --backup '"$posix_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --pdksh --backup '"$posix_input"      "$posix_output$lf$posix_backup_output"
run './srcenv --murex --backup '"$posix_input"      "$posix_output$lf$posix_backup_output"
run './srcenv --posix --backup '"$posix_input"      "$posix_output$lf$posix_backup_output"
run './srcenv --sh --backup '"$posix_input"         "$posix_output$lf$posix_backup_output"
run './srcenv --zsh --backup '"$posix_input"        "$posix_output$lf$posix_backup_output"
run './srcenv --bat --backup '"$posix_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_backup_output$lf$cmd_output_suffix"
run './srcenv --cmd --backup '"$posix_input"        "$cmd_output_prefix$lf$cmd_output$lf$cmd_backup_output$lf$cmd_output_suffix"
run './srcenv --elvish --backup '"$posix_input"     "$elvish_output$lf$elvish_backup_output"
run './srcenv --fish --backup '"$posix_input"       "$fish_output$lf$fish_backup_output"
run './srcenv --launchctl --backup '"$posix_input"  "$launchctl_output$lf$launchctl_backup_output"
run './srcenv --nu --backup '"$posix_input"         "$nu_output$lf$nu_backup_output"
run './srcenv --nushell --backup '"$posix_input"    "$nu_output$lf$nu_backup_output"
run './srcenv --pwsh --backup '"$posix_input"       "$pwsh_output$lf$pwsh_backup_output"
run './srcenv --powershell --backup '"$posix_input" "$pwsh_output$lf$pwsh_backup_output"
run './srcenv --env --backup '"$posix_input"        "$env_output$lf$env_backup_output"
run './srcenv --json --backup '"$posix_input"       "$json_backup_output"

end

# endregion Tests
